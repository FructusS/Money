<MudCard Elevation="3">
    <MudCardHeader Class="border-b-2 border-solid pa-2"
                   Style="border-color: var(--mud-palette-divider)">
        <MudItem md="2"
                 xs="4">
            <MudStack Justify="Justify.FlexStart"
                      Row
                      StretchItems="StretchItems.End">
                <MudIcon Icon="@Icons.Material.Rounded.CalendarToday"
                         Size="Size.Small" />
                <MudText>
                    @OperationsDay.Date.ToShortDateString()
                </MudText>
            </MudStack>
        </MudItem>

        <MudItem md="2"
                 xs="4">
            <OperationDialog OnSubmit="OnSubmit"
                             Operation="@(new Operation { Date = OperationsDay.Date, Category = Category.Empty })"
                             @ref="_dialog">
                <MudStack AlignItems="AlignItems.Center"
                          Row>
                    @foreach (OperationTypes.Value type in OperationTypes)
                    {
                        <MudTooltip Text="@type.AddText">
                            <MudIconButton Color="type.Color"
                                           Disabled="@(_dialog.IsOpen)"
                                           Icon="@Icons.Material.Rounded.Add"
                                           OnClick="() => _dialog.ToggleOpen(type)"
                                           Size="Size.Small" />
                        </MudTooltip>
                    }
                    <MudTooltip Text="Быстрое добавление">
                        <MudIconButton Color="Color.Info"
                                       Disabled="@(_dialog.IsOpen)"
                                       Icon="@Icons.Material.Rounded.Add"
                                       OnClick="() => _dialog.ToggleOpen()"
                                       Size="Size.Small" />
                    </MudTooltip>
                </MudStack>
            </OperationDialog>
        </MudItem>

        @foreach (OperationTypes.Value operationType in OperationTypes)
        {
            <MudItem md="2"
                     xs="2">
                <MudStack AlignItems="AlignItems.Center"
                          Justify="Justify.FlexEnd"
                          Row
                          StretchItems="StretchItems.End">
                    <MudIcon Color="@operationType.Color"
                             Icon="@operationType.Icon"
                             Size="Size.Small" />
                    <MudText>
                        @OperationsDay.CalculateSum(operationType).ToString("N0")
                    </MudText>
                </MudStack>
            </MudItem>
        }

        <MudSpacer />
    </MudCardHeader>
    <MudCardContent Class="pa-2">
        <MudStack Spacing="0">
            @for (int i = 0; i < OperationsDay.Operations.Count; i++)
            {
                Operation operation = OperationsDay.Operations[i];

                if (operation.IsDeleted)
                {
                    <MudStack AlignItems="AlignItems.Center"
                              Row>
                        <MudText Style="text-decoration: line-through;">
                            @operation.Sum.ToString("N0") - @operation.Category.Name - @operation.Comment
                        </MudText>
                        <MudSpacer />
                        <MudButton Color="Color.Info"
                                   EndIcon="@Icons.Material.Rounded.Cancel"
                                   OnClick="() => OnRestore.InvokeAsync(operation)">
                            Восстановить
                        </MudButton>
                    </MudStack>
                }
                else
                {
                    <OperationItem @key="operation"
                                   OnDelete="() => OnDelete.InvokeAsync(operation)"
                                   OnEdit="OnEdit"
                                   Operation="@operation" />

                    if (Settings.ShowDividers && i != OperationsDay.Operations.Count - 1)
                    {
                        <MudDivider DividerType="DividerType.FullWidth"
                                    FlexItem />
                    }
                }
            }
        </MudStack>
    </MudCardContent>
</MudCard>
