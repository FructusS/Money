package entities

import "database/sql"

type Operation struct {
	BaseTable[OldOperation, NewOperation]
}

func (table *Operation) Transform(old OldOperation) NewOperation {
	return NewOperation{
		Id:            old.Id,
		UserId:        old.UserId,
		Sum:           old.Sum,
		CategoryId:    old.CategoryId,
		Comment:       sql.NullString{String: old.Comment},
		Date:          old.Date,
		CreatedTaskId: old.CreatedTaskId,
		PlaceId:       old.PlaceId,
		IsDeleted:     false,
	}
}

type OldOperation struct {
	Id            int    `db:"Id"`
	UserId        int    `db:"UserId"`
	PaymentId     int    `db:"PaymentId"`
	Sum           string `db:"sum"`
	CategoryId    int    `db:"CategoryId"`
	TypeId        int    `db:"TypeId"`
	Comment       string `db:"Comment"`
	Date          string `db:"Date"`
	TaskId        int    `db:"TaskId"`
	CreatedTaskId int    `db:"CreatedTaskId"`
	PlaceId       int    `db:"PlaceId"`
}

/*
create table "Money.Payment"
(
"Id"            integer generated by default as identity
"UserId"        integer                  not null
"PaymentId"     integer                  not null,
"Sum"           numeric                  not null,
"CategoryId"    integer,
"TypeId"        integer                  not null,
"Comment"       varchar(4000)            not null,
"Date"          timestamp with time zone not null,
"TaskId"        integer,
"CreatedTaskId" integer,
"PlaceId"       integer
);
*/

type NewOperation struct {
	Id            int            `db:"id"`
	UserId        int            `db:"user_id"`
	Sum           string         `db:"sum"`
	CategoryId    int            `db:"category_id"`
	Comment       sql.NullString `db:"comment"`
	Date          string         `db:"date"`
	CreatedTaskId int            `db:"created_task_id"`
	PlaceId       int            `db:"place_id"`
	IsDeleted     bool           `db:"is_deleted"`
}

/*
create table operations
(
user_id         integer not null
id              integer not null,
sum             numeric not null,
category_id     integer not null,
comment         varchar(4000),
date            date    not null,
created_task_id integer,
place_id        integer,
is_deleted      boolean not null,
);
*/
